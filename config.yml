#working with v 2.5.6
secrets: secrets.yml
templates:

  global:
    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title} # Block any subbed/dubbed/etc videos
        - \b(duo|tri|quadri|tetra|penta)logy\b: {from: title} # Block series, only accept one at a time
        - \b3-?D\b: {from: title} # I don't have any 3D displays
        - \btrailer\b: {from: title} # I've gotten a few trailers that matched as movies. VERY annoying
        - \bR5\b: {from: title} # The following are poor quality types that somehow got through the quality
        - \bWEBSCR\b: {from: title} # features usually due to the title including a keyword like "720p" as well
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title}
        #- \bChi_Jap\b: {from: title} # chinese subbed jdrama
    
    # Filter by filenames. Allow multiple video types and rar packs (but note if there is just a
    # single .rar file it won't be accepted)
    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.mp4'
        - '*.r0*'
        - '*.part0*'
        - '*.MKV'
#      reject: [ '*.txt' ]

    # Limit the frequency of requests to domains so they don't complain about using a bot
    domain_delay:
      bt-chat.com: 5 seconds
      torrentz.in: 10 seconds
      torrentz.ch: 10 seconds
      torrentz.eu: 10 seconds
      torrentz.me: 10 seconds
      ezrss.it: 1 seconds
      showrss.info: 1 seconds
      torlock.eu: 1 seconds
      torrenticity.com: 1 seconds
      nyaa.eu: 10 seconds
      thepiratebay.se: 5 seconds
      thepiratebay.org: 5 seconds
      rarbg.to: 10 seconds
      rarbg.com: 10 seconds
      
      

  tv-series:
    series:
      settings:
        hdtv-quality:
          quality: hdtv+ <720p
          identified_by: ep

      hdtv-quality:
        - The Big Bang Theory
        - The Vampire Diaries
        - Cougar town
        - Greys Anatomy
        - The Simpsons
        - Nurse jackie
        - Haven
        - The Walking Dead
        - Its Always Sunny in Philadelphia
        - Game of thrones
        - Louie
        - New Girl
        - 2 broke girls
        - Homeland
        - Grimm
        - House of Lies
        - Girls:
            exact: yes
        - Men at Work
        - Moone Boy
        - Black mirror
        - The Mindy Project
        - Bates Motel
        - Doctor Who
        - Inside Amy Schumer
        - Marvels Agents of S.H.I.E.L.D.
        - Sherlock
        - House of cards
        - Man Seeking Woman
        - Better Call Saul
        - The Last Man on Earth
        - Mr Robot
        - Scream The TV Series
        - Marvels Jessica Jones
        - Scream Queens
        - Ash vs Evil Dead
        - Marvels Daredevil
        - The X-Files
        - Slasher
        - Stranger things
        - Better things
        - Fleabag
        - westworld
        - People of Earth
        - Legion
      
        
      others:
        - Beavis and Butt-Head


  tv-output:
    #set:
    #  path: /shares/OpenShare/Videos/Series/{{series_name}}/Season {{series_season|pad(2)}}
    transmission:
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
      path: /shares/OpenShare/incoming/series/
    list_add:
      - trakt_list: 
          username: '{{ secrets.trakt.username }}'
          account: '{{ secrets.trakt.account }}'
          list: collection
          type: episodes


  tv-input:
    inputs:
      - rss: https://eztv.ag/ezrss.xml
      #- rss: https://showrss.info/feeds/schedule/schedule.rss
      #- rss: https://torrentz.eu/feed_verified?q=tv
      - rss: https://extratorrent.cc/rss.xml?cid=8&type=new
      - rss: https://rarbg.to/rss.php??category=1;18;41
      #- rss: https://limetorrents.ukbypass.win/rss/20/
    content_size:
      min: 12
      max: 1200

  movie:
    #inputs:
    #  - rss: https://www.torlock.com/movies/rss.xml              # TorLock (Movies)
    #  - rss: https://torrentz.eu/feed_verified?q=movies          # Torrentz (Verified Movies)
    imdb:
      min_score: 6.5
      min_votes: 200
      reject_genres:
        - documentary
      reject_directors:
        - nm0031976
    imdb_lookup: yes
    require_field: imdb_url
    quality: dvdrip+
    torrent_alive:
      min_seeds: 2
      reject_for: 10 minutes
    download: /shares/OpenShare/incoming/torrents/


  tv-premieres:
    series_premiere:
      quality: hdtv+ <720p
    thetvdb_lookup: yes
    require_field: tvdb_genres
    regexp:
      reject:
        - documentary: {from: tvdb_genres}
        - talk show: {from: tvdb_genres}
        - game show: {from: tvdb_genres}
        - reality: {from: tvdb_genres}
        - children: {from: tvdb_genres}
        - news: {from: tvdb_genres}
    transmission:
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
      path: /shares/OpenShare/incoming/premieres/
      

  torrents:
    #torrent_alive: 
    #  min_seeds: 2
    #  reject_for: 10 minutes
    private_torrents: no
    #magnets: no
    regexp:
      reject:
        - '[\W_]+(?:nuked)(?:_|\b)'
      from: title

######################################################################################

tasks:
  series_search:
    manual: yes
    disable: seen
    
    series:
      settings:
        hdtv-quality:
          quality: hdtv+ <720p
          identified_by: ep
      hdtv-quality:
        - Scream Queens:
            begin: S02E04
    
    template:
      #- tv-series
      - tv-output
      - torrents
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
      from:
        - search_rss: https://zooqle.com/search?q={{search_term}}&fmt=rss 
        - piratebay: yes
        - rarbg:
           category: [18]
  
  tv_feed:
    priority: 2
    template: [ tv-input, tv-series, tv-output, torrents ]

  tvpremieres_feed:
    priority: 3
    template: [ tv-input, tv-premieres, torrents ]
    manual: yes

  torrent_feed:
    priority: 5
    template: [ movie, torrents ]
    #list_add:
    #  - movie_list: movies
    manual: yes


  #feed to pull movies from trakt.tv watchlist and add to the movie queue
  movie_queue_fill:
    priority: 1
    interval: 2 hours
    trakt_list:
      username: '{{ secrets.trakt.username }}'
      account: '{{ secrets.trakt.account }}'
      list: watchlist
      type: movies
    imdb_list:
      login: '{{ secrets.imdb.login }}'
      password: '{{ secrets.imdb.password }}'
      list: watchlist
    accept_all: yes
    seen: local  # We don't want accepted movies on this feed to affect actual download feed
    list_add:
      - movie_list: movies

  #feed that automatically generates an rss feed based on entries from the movie_queue
  movie_search:
    priority: 10
    template: torrents
    torrent_alive:
      min_seeds: 2
      reject_for: 10 minutes
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - movie_list: movies
      from:
        - piratebay:
            category: movies
        #- torrentz: good
        - extratorrent:
            category: movies
        - rarbg:
            category: [14, 17]
    #list_match:
    #  from:
    #    - movie_list: movies
    quality: dvdrip+
    imdb_lookup: yes
    regexp:
      reject:
        - '[\W_]read[\W_]*nfo(?:_|\b)': { from: title }
        - '[\W_]3-?D(?:BD)?(?:_|\b)': { from: title }
        - '[\W_](?:heb|kor|swe)sub(?:_|\b)': { from: title }
        - '[\W_](?:dubbed|pldub|hardcoded|hardsubs?)(?:_|\b)':
            from: [ title, description ]
        - '[\W_](italian|spanish)(?:_|\b)': { from: title }
    content_size:
      min: 650
      max: 2000
    transmission:
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'
    list_add:
      - trakt_list:
          username: '{{ secrets.trakt.username }}'
          account: '{{ secrets.trakt.account }}'
          type: movies
          list: collection


  #ezrss.it rss not working TODO adapt this task
  SearchEZTV:
    template: [ torrents ]
    discover:
      what:
        - mock: 
          - title: $show
      from:
        - search_rss: https://ezrss.it/search/index.php?show_name={{search_term}}&season=$season&show_name_exact=false&quality=hdtv&mode=rss
      #type: any
    thetvdb_lookup: yes
    exists_series:
      - /shares/OpenShare/incoming/
    series:
      settings:
        hdtv-quality:
          quality: hdtv+ <720p
      hdtv-quality:
        - $show
    manual: yes
    transmission:
      username: '{{ secrets.transmission.username }}'
      password: '{{ secrets.transmission.password }}'

                  
  sort-series:
    manual: yes
    template: tv-series
    exec:
      on_exit:
        phase: chown -R nobody:users /shares/OpenShare/Videos/Series/
    filesystem:
      path: /shares/OpenShare/incoming/series/
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes
    #seen: local
    disable: seen
    series:
      settings:
        hdtv-quality:
          quality: hdtv+ <720p
          parse_only: yes
          identified_by: ep
    require_field: series_name
    metainfo_series: yes
    #thetvdb_lookup: yes
    move:
      to: /shares/OpenShare/Videos/Series/{{series_name}}/Season {{series_season|pad(2)}}
      # save the file as "Series Name - SxxEyy - Episode Name.ext"
      #filename: '{{ tvdb_series_name }} - {{ series_id }} - {{ tvdb_ep_name }}{{ title | pathext }}' 
      #filename: '{{ series_name }}-{{ series_id }}-{{ title | pathext }}' 
      along:
        extensions:
          - srt

